name: MediaSharpBuild

on: [push, pull_request]

env: 
  EXCLUDE_RUN_ID_FROM_PACKAGE: false
  EXCLUDE_SUFFIX_FROM_VERSION: false
  
jobs:

  #Build MediaSharp
  build-solution:
    strategy:
      matrix:
        configuration: [Debug, Release]
        platform: [x64]
    runs-on: windows-2022
    steps:
    - name: Git Checkout on Solution master/MediaSharp
      uses: actions/checkout@v3.3.0
    - name: Add MSBUILD to PATH
      uses: microsoft/setup-msbuild@v1.1
    - name: Build MediaSharp
      run: msbuild -t:restore,build /p:Configuration=${{matrix.configuration}} /p:Platform=${{matrix.platform}}
    - name: Upload MSBuild binary log
      uses: actions/upload-artifact@v3
      with:
        name: msbuild_log_${{matrix.configuration}}_${{matrix.platform}}
        path: msbuild.binlog
        if-no-files-found: error
  
  build-packages:
    needs: [build-solution]
    runs-on: windows-2022
    steps:
    - name: Git checkout
      uses: actions/checkout@v3.3.0
    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.1
    - name: Build MediaSharp package
      run: dotnet build src\MediaSharp.Core\MediaSharp.Core.Package.csproj -t:restore,build,pack /p:Configuration=Release
      
    
 # Publish the packages to GitHub packages
  publish-nightlies-github:
    needs: [build-packages]
    runs-on: windows-2022
    #if: ${{github.event_name == 'push'}}
    steps:
    - uses: actions/download-artifact@v3
      with:
        name: nuget_packages
        path: artifacts
    - run: dotnet nuget push "artifacts\*.nupkg" --source "https://nuget.pkg.github.com/${{github.repository_owner}}/index.json" --api-key ${{secrets.PACKAGE_TOKEN}} --skip-duplicate
